//------------------------------------librerias-----------------------------------------------------------
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdbool.h>
#include <time.h>
//------------------------------------funciones-----------------------------------------------------------
void Normal();
void explicación();
void puntuacion();
char* ObtenerPalabra();
char* espacios();
int dificultad();

//------------------------------------main-----------------------------------------------------------
int main(){
    int eleccion;
    char nombre[50];
    srand((unsigned int)time(NULL));
    printf("Porfavor ingresa tu nombre.\n");
    scanf("%s",nombre);
    system("cls");
    do
    {   
        printf("AHORCADO\n");
        printf("Bienvenidx %s, elige una opcion: \n", nombre);
        printf("1. Nueva partida\n");
        printf("2. Puntuación\n");
        printf("3. Cómo jugar\n");
        printf("4. Salir\n");
        scanf("%d", &eleccion);
        switch (eleccion)
        {
            case 1:
                Normal();
                break;
            case 2:
                puntuacion();
                break;
            case 3:
                explicación();
                break;
            case 4:
                printf("¡Hasta pronto!");
                break;
            default:
                system("cls");
                printf("Ingrese opción valida.\n");
                break;
        }
    } while (eleccion != 4);
    return 0;
}
//------------------------------------funciones_desarrolladas-----------------------------------------------------------
//__________Interfaz principal_______________
void Normal(){

//------------------elección de dificultad------------------
    int tag = dificultad();
    char* palabra = ObtenerPalabra(tag);
//------------------elección de dificultad------------------

//------------------imprimir espacio vacios------------------
    printf("mi tag es: %d, y mi palabra es: %s",tag, palabra);
//------------------imprimir espacio vacios------------------
}

void explicación(){
    system("cls");
    int salir;
    do
    {
        printf("1. ¿Cómo jugar al ahorcado?\n");
        printf("2. ¿Cómo es el sistema de puntos?\n");
        printf("3. Volver a pantalla de incio.\n");
        printf("Seleccione opción: ");
        scanf("%d", &salir);
        switch (salir)
        {
        case 1:
            system("cls");
            printf("La premisa es sencilla. Debes de adivinar la palabra ingresando letra a letra (pueden repetirse letras y no se toman en cuenta los acentos),\n");
            printf("¡pero atención! que si te equivocas se va a ir formando un dibujo simulando las oportunidades\n");
            printf("que tienes. Son un total de 6 oportunidades de adivinar la palabra, si ves este dibujo, ¡se acabo el juego!\n");
            printf("___\n");
            printf("|       O\n");
            printf("|      /|\\\n");
            printf("|      / \\\n");
            printf("|\n");
            printf("\n");
            break;
        case 2:
            system("cls");
            printf("¡La forma de conseguir puntos es sencilla!, pero atención la forma de puntaje cambia según la dificultad del juego.\n");
            printf("Facil:\n");
            printf("-Por cada letra que adivines se va a sumar un +1\n");
            printf("-Si adivinas la palabra sin errores +5\n");
            printf("-Si adivinas la palabra en menos de 15 segundos +10\n");
            printf("\n");
            printf("Medio:\n");
            printf("-Por cada letra que adivines se va a sumar un +1\n");
            printf("-Si adivinas la palabra sin errores +12\n");
            printf("-Si adivinas la palabra en menos de 30 segundos +15\n");
            printf("\n");
            printf("Dificil:\n");
            printf("-Por cada letra que adivines se va a sumar un +1\n");
            printf("-Si adivinas la palabra sin errores +30\n");
            printf("-Si adivinas la palabra en menos de 50 segundos +25\n");
            printf("\n");
            break;
        default:
            system("cls");
            printf("seleccione una opción valida.\n");
            break;
        }
    } while (salir != 3);
    system("cls");
}

void puntuacion(){
    system("cls");
    printf("Funciona eleccion 2\n");
    system("cls");
}


char* ObtenerPalabra(int tag) {
    char *palabra = NULL;
    size_t maxLength = 50;  // Longitud máxima de la palabra
    palabra = (char*)malloc(maxLength * sizeof(char));
    FILE *filePointer;
    filePointer = fopen("Palabras.dat", "r");

    if (filePointer == NULL) {
        printf("Error al abrir el archivo.\n");
        Normal();
    }

    // Buscar la línea correspondiente al tag
    for (int i = 0; i < tag; ++i) {
        if (fgets(palabra, sizeof(palabra), filePointer) == NULL) {
            printf("Error: No se encontró la palabra para el tag %d.\n", tag);
            fclose(filePointer);
            Normal();
        }
    }

    // Eliminar el salto de línea al final de la palabra
    size_t length = strlen(palabra);
    if (length > 0 && palabra[length - 1] == '\n') {
        palabra[length - 1] = '\0';
    }

    // Imprimir la palabra
    printf("%s\n", palabra);

    fclose(filePointer);
    return palabra;
}
//dificultad devuelve el tag de la palabra que se va a usar en el juego

int dificultad() {
    bool salir = false;
    int eleccion, tag;
    system("cls");
    //Escanea la eleccion del usuario y devuelva el tag de la palabra que se usara
    do
    {
        printf("Dificultad: \n");
        printf("1. Fácil: de 4 a 5 letras.\n");
        printf("2. Medio: de 6 a 9 letras.\n");
        printf("3. Difícil: de 10 a 13 letras.\n");
        printf("Seleccione dificultad: ");
        scanf("%d", &eleccion);
        switch (eleccion)
        {
        case 1:
            tag = rand() % 36; 
            salir = true;
            break;
        case 2:
            tag = 36 + rand() % 36;
            salir = true;
            break;
        case 3:
            tag = 71 + rand() % 36;
            salir = true;
            break;
        default:
            system("cls");
            printf("Opción no válida.\n");
            break;
        }
    //fin de escaneo
    } while (salir != true);

    system("cls");
    return tag;
}

//char* palabra(char* palabra){
//    printf("mi palabra es %s", palabra);
//}
